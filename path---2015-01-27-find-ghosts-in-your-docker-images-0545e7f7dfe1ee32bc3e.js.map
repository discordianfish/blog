{"version":3,"sources":["webpack:///path---2015-01-27-find-ghosts-in-your-docker-images-0545e7f7dfe1ee32bc3e.js","webpack:///./.cache/json/2015-01-27-find-ghosts-in-your-docker-images.json"],"names":["webpackJsonp","500","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,mBAAAC,OAAA,2BAA8DC,gBAAmBC,GAAA,8GAAAC,KAAA,srBAA8xBC,aAAiDL,MAAA,oCAAAM,KAAA,+BAAiFC,aAAgBC,KAAA,iDAAAC,UAAoEC,QAAUF,KAAA,0DAAgEH,aAAgBL,MAAA,8CAAqDW,MAASD,QAAUF,KAAA,2CAAiDH,aAAgBL,MAAA","file":"path---2015-01-27-find-ghosts-in-your-docker-images-0545e7f7dfe1ee32bc3e.js","sourcesContent":["webpackJsonp([114328391656268],{\n\n/***/ 500:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"5π - fish's blog\",\"author\":\"Johannes 'fish' Ziemke\"}},\"markdownRemark\":{\"id\":\"/usr/src/src/pages/2015/01/27/find-ghosts-in-your-docker-images/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>A severe security vulnerability in glibc &#x3C; 2.18, nicknamed <a href=\\\"http://www.openwall.com/lists/oss-security/2015/01/27/9\\\">GHOST</a> was just reported.\\nHere is a handy one-liner (Debian/Ubuntu only though) to walk through all your Docker images and see if they include a glibc older than 2.18:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>docker images -q | while read I; do V=`docker run --rm --entrypoint apt-cache $I policy libc6 2>/dev/null | awk ' /Installed/ { print $2\\\"\\\\n\\\"2.18 }'|sort -V|head -1`; if [ -z \\\"$V\\\" ]; then echo \\\"$I not apt based\\\" && continue; fi;  [ \\\"$V\\\" == \\\"2.18\\\" ] || echo \\\"$I is vulnerable\\\"; done</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Find GHOSTs in your Docker images\",\"date\":\"2015-01-27 17:30:17 +0000\"}}},\"pathContext\":{\"slug\":\"/2015/01/27/find-ghosts-in-your-docker-images/\",\"previous\":{\"fields\":{\"slug\":\"/2015/01/26/monitor-docker-containers-with-prometheus/\"},\"frontmatter\":{\"title\":\"Monitor Docker Containers with Prometheus\"}},\"next\":{\"fields\":{\"slug\":\"/2015/02/10/prometheus-on-raspberry-pi/\"},\"frontmatter\":{\"title\":\"Prometheus on Raspberry Pi\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2015-01-27-find-ghosts-in-your-docker-images-0545e7f7dfe1ee32bc3e.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"5π - fish's blog\",\"author\":\"Johannes 'fish' Ziemke\"}},\"markdownRemark\":{\"id\":\"/usr/src/src/pages/2015/01/27/find-ghosts-in-your-docker-images/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>A severe security vulnerability in glibc &#x3C; 2.18, nicknamed <a href=\\\"http://www.openwall.com/lists/oss-security/2015/01/27/9\\\">GHOST</a> was just reported.\\nHere is a handy one-liner (Debian/Ubuntu only though) to walk through all your Docker images and see if they include a glibc older than 2.18:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>docker images -q | while read I; do V=`docker run --rm --entrypoint apt-cache $I policy libc6 2>/dev/null | awk ' /Installed/ { print $2\\\"\\\\n\\\"2.18 }'|sort -V|head -1`; if [ -z \\\"$V\\\" ]; then echo \\\"$I not apt based\\\" && continue; fi;  [ \\\"$V\\\" == \\\"2.18\\\" ] || echo \\\"$I is vulnerable\\\"; done</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Find GHOSTs in your Docker images\",\"date\":\"2015-01-27 17:30:17 +0000\"}}},\"pathContext\":{\"slug\":\"/2015/01/27/find-ghosts-in-your-docker-images/\",\"previous\":{\"fields\":{\"slug\":\"/2015/01/26/monitor-docker-containers-with-prometheus/\"},\"frontmatter\":{\"title\":\"Monitor Docker Containers with Prometheus\"}},\"next\":{\"fields\":{\"slug\":\"/2015/02/10/prometheus-on-raspberry-pi/\"},\"frontmatter\":{\"title\":\"Prometheus on Raspberry Pi\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2015-01-27-find-ghosts-in-your-docker-images.json\n// module id = 500\n// module chunks = 114328391656268"],"sourceRoot":""}