{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["rhythm","typography","scale","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","image","frontmatter","title","property","content","location","href","childImageSharp","origin","fixed","src","style","display","date","dangerouslySetInnerHTML","__html","html","marginBottom","listStyle","padding","margin","to","fields","slug","rel","float","React","Component","pageQuery"],"mappings":"wQAQIA,EAASC,IAAWD,OACpBE,EAAQD,IAAWC,MAEjBC,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAGoBD,KAAKC,MAAMK,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KACZC,EAAQJ,IAAIN,EAAM,qBACxB,OACE,6BACE,kBAAC,IAAD,KACE,+BAAWA,EAAKW,YAAYC,MAA5B,MAAuCP,GACvC,0BAAMQ,SAAS,WAAWC,QAASd,EAAKW,YAAYC,QACpD,0BAAMC,SAAS,UAAUC,QAAQ,YACjC,0BAAMD,SAAS,SAASC,QAASb,KAAKC,MAAMa,SAASC,OACnDN,GAASA,EAAMO,iBAAmB,0BAAMJ,SAAS,WAAWC,QAASb,KAAKC,MAAMa,SAASG,OAASR,EAAMO,gBAAgBE,MAAMC,OAElI,4BAAKpB,EAAKW,YAAYC,OACtB,uBACES,MAAK,iBACAxB,GAAM,IADN,CAEHyB,QAAS,WAGVtB,EAAKW,YAAYY,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAC7C,wBACEL,MAAO,CACLM,aAAchC,EAAO,MAGzB,kBAAC,IAAD,MAEA,wBACE0B,MAAO,CACLO,UAAW,OACXC,QAAS,EACTC,OAAQ,IAGTtB,GACC,wBAAIa,MAAO,CAACC,QAAS,WACnB,kBAAC,IAAD,CAAMS,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASG,YAAYC,QAK7BH,GACC,wBAAIY,MAAO,CAACC,QAAS,SAAUa,MAAO,UACpC,kBAAC,IAAD,CAAMJ,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKE,YAAYC,MADpB,U,GAjDiBwB,IAAMC,WA4DtBvC,YAER,IAAMwC,EAAS","file":"component---src-templates-blog-post-js-ea5375b7c801c9892303.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport typography from '../utils/typography'\n\nlet rhythm = typography.rhythm\nlet scale = typography.scale\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const { previous, next } = this.props.pageContext\n    const image = get(post, 'frontmatter.image')\n    return (\n      <div>\n        <Helmet>\n          <title>{`${post.frontmatter.title} | ${siteTitle}`}</title>\n          <meta property=\"og:title\" content={post.frontmatter.title} />\n          <meta property=\"og:type\" content=\"article\" />\n          <meta property=\"og:url\" content={this.props.location.href} />\n          { image && image.childImageSharp && <meta property=\"og:image\" content={this.props.location.origin + image.childImageSharp.fixed.src} /> }\n        </Helmet>\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            listStyle: 'none',\n            padding: 0,\n            margin: 0,\n          }}\n        >\n          {previous && (\n            <li style={{display: 'inline'}}>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            </li>\n          )}\n\n          {next && (\n            <li style={{display: 'inline', float: 'right'}}>\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        image {\n          childImageSharp {\n            fixed(width: 1200, height: 1200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}